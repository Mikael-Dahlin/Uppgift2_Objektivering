package application;
	
import java.io.File;
import java.util.ArrayList;
import javafx.application.Application;
import javafx.collections.ObservableList;
import javafx.event.ActionEvent;
import javafx.event.EventHandler;
import javafx.stage.FileChooser;
import javafx.stage.Stage;
import javafx.scene.Node;
import javafx.scene.Scene;
import javafx.scene.layout.BorderPane;
import javafx.scene.layout.HBox;
import javafx.scene.layout.VBox;
import javafx.scene.control.Button;
import javafx.scene.control.TextField;
import javafx.scene.input.KeyCode;
import javafx.scene.input.KeyEvent;
import javafx.scene.control.ScrollPane;

/**
 * 
 * @author mikael
 * Main class of the program that runs everything and handles UI elements.
 */
public class Main extends Application {
	
	// Global class variable.
	private ReadCSV csv = new ReadCSV();
	
	/*
	 * Method for starting the UI.
	 */
	@Override
	public void start(Stage primaryStage) {
		createUI(primaryStage, "rep1");
	}
	
	/*
	 * Method that creates the UI elements and puts them on the screen.
	 */
	private void createUI(Stage primaryStage, String string) {
		try {
			// Declaration of variables.
			BorderPane root = new BorderPane();
			ArrayList<CsvRow> sheet = csv.sortedCSV(string);
			VBox vb = getList(sheet, primaryStage);
			ScrollPane scrollPane = new ScrollPane();
			
			// Add elements to scene.
			root.setCenter(scrollPane);
			scrollPane.setContent(vb);
			Scene scene = new Scene(root,1000,600);
			
			// Add KeyEvent handler to scene. 
			scene.setOnKeyPressed(new EventHandler<KeyEvent>() {
				public void handle(final KeyEvent keyEvent) {
					
					// Check if the user wants to save the file or cell data.
					if (keyEvent.isControlDown() && keyEvent.getCode() == KeyCode.S) {
						// Save the file using FileChooser.
						FileChooser fileChooser = new FileChooser();
						fileChooser.setInitialDirectory(new File(System.getProperty ("user.dir")));
						fileChooser.setInitialFileName("sample.csv");
						fileChooser.getExtensionFilters().add(new FileChooser.ExtensionFilter("Microsoft Excel Comma Separated Values File (*.csv)" ,"*.csv"));
						File file = fileChooser.showSaveDialog(primaryStage);
						csv.saveFile(file);

					} else if (keyEvent.getCode() == KeyCode.ENTER && keyEvent.getTarget().getClass().getTypeName().equals("javafx.scene.control.TextField")) {
						// Save data from the active TextField when you press enter.
						TextField target = (TextField)keyEvent.getTarget();
						ObservableList<Node> columns = target.getParent().getChildrenUnmodifiable();
						ObservableList<Node> rows = target.getParent().getParent().getChildrenUnmodifiable();
						sheet.get(rows.indexOf(target.getParent())-1).setIndex(columns.indexOf(keyEvent.getTarget()), target.getText());
						
					}
				}
			});

			// Set and show primaryStage.
			primaryStage.setScene(scene);
			primaryStage.show();
			
		} catch(Exception e) {
			e.printStackTrace();
		}
	}

	/*
	 * Method for creating a custom table of TextField's.
	 */
	private VBox getList(ArrayList<CsvRow> sheet, Stage primaryStage) {
		// Declaration of variables.
		ArrayList<String> headers = sheet.get(0).getHeaders();
		Button button;
		HBox headerRow = new HBox();
		HBox col[] = new HBox[sheet.size()];
		VBox rows;
		
		// Generate buttons for the headers and add ActionEvent handlers.
		for (int i = 0; i < headers.size(); i++) {
			button = new Button(headers.get(i));
			button.setPrefWidth(149.6);
			button.setOnAction(new EventHandler<ActionEvent>() {

				@Override
				public void handle(ActionEvent e) {
					createUI(primaryStage,((Button) e.getTarget()).getText());
				}
			});
			
			headerRow.getChildren().addAll(button);			
		}
		
		// Add headers to the VBox.
		rows = new VBox(headerRow);
		
		// Add the TextFields to the VBox.
		for(int i = 0; i < sheet.size(); i++) {
			col[i]= new HBox();
			ArrayList<String> list = sheet.get(i).getRowArray();
			for(int j = 0; j < list.size(); j++) {
				TextField tf = new TextField((String)list.get(j));
				col[i].getChildren().addAll(tf);
			}
			rows.getChildren().addAll(col[i]);
		}
		return rows;
	}

	/*
	 * Main Method for running the program, auto generated by javaFX project.
	 */
	public static void main(String[] args) {
		launch(args);
	}
}



























/* int height = 600;
			int widht = 1000;
			
			BorderPane root = new BorderPane();
			Scene scene = new Scene(root,400,400);
			ScrollBar sb = new ScrollBar();
			ScrollPane scrollPane = new ScrollPane();
			VBox vb = getList();
			
			sb.setLayoutX(vb.getWidth() - sb.getWidth());
	        sb.setMin(0);
	        sb.setOrientation(Orientation.VERTICAL);
	        sb.setPrefHeight(height);
	        sb.setMax(height * 2);

	        sb.valueProperty().addListener(new ChangeListener<Number>() {
	            public void changed(ObservableValue<? extends Number> ov,
	                    Number old_val, Number new_val) {
	            	vb.setLayoutY(-new_val.doubleValue());
	            }
	        });
	        
			vb.getChildren().add(sb);
			scene = new Scene(vb,widht,height);
			scene.setOnKeyPressed(new EventHandler<KeyEvent>() {
				public void handle(final KeyEvent keyEvent) {
					if (keyEvent.isControlDown() && keyEvent.getCode() == KeyCode.S) {
						System.out.println(keyEvent.getSource());
						System.out.println(keyEvent.getTarget());
						System.out.println("save file!");
						System.out.println("true");
					}
				}
			});

			scene.getStylesheets().add(getClass().getResource("application.css").toExternalForm());
			
			primaryStage.setScene(scene);
			primaryStage.show();
*/